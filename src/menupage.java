
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author DIPAK
 */
public class menupage extends javax.swing.JFrame {

    /**
     * Creates new form menupage
     */
    public menupage() {
        initComponents();
        logout.setBackground(Color.red);
        int r=0,g=0,b=0;
        float[] hsb=new float[3];
        r=14;
        g=140;
        b=214;
        Color.RGBtoHSB(r, g, b, hsb);
        logout.setBackground(Color.red);
                
        newb.setBackground(Color.getHSBColor(hsb[0],hsb[1],hsb[2]));
        waiting.setBackground(Color.getHSBColor(hsb[0],hsb[1],hsb[2]));
        mybook.setBackground(Color.getHSBColor(hsb[0],hsb[1],hsb[2]));
        edit.setBackground(Color.getHSBColor(hsb[0],hsb[1],hsb[2]));
        r=40;
        g=40;
        b=40;
        Color.RGBtoHSB(r, g, b, hsb);
        this.getContentPane().setBackground(Color.getHSBColor(hsb[0],hsb[1],hsb[2]));
        int f=0;
        String uid=null;
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/oop?zeroDateTimeBehavior=convertToNull","root","12345");
            Statement s=con.createStatement();
            ResultSet rs=null;
            rs=s.executeQuery("select * from logindata where active=1;");
            while(rs.next())
            {
                uid=rs.getString(1);
            }
            rs=s.executeQuery("select status from "+uid+";");
            while(rs.next())
            {
                if(rs.getInt(1)==0)
                {
                    f=1;
                    break;
                }
            }
            if(f==1)
            {
                waiting.setForeground(Color.green);
            }
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mybook = new javax.swing.JButton();
        waiting = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        newb = new javax.swing.JButton();
        logout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mybook.setFont(new java.awt.Font("Caviar Dreams", 1, 18)); // NOI18N
        mybook.setForeground(new java.awt.Color(255, 255, 255));
        mybook.setText("My Bookings");
        mybook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mybookActionPerformed(evt);
            }
        });

        waiting.setFont(new java.awt.Font("Caviar Dreams", 1, 18)); // NOI18N
        waiting.setForeground(new java.awt.Color(255, 255, 255));
        waiting.setText("View Waiting-List");
        waiting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waitingActionPerformed(evt);
            }
        });

        edit.setFont(new java.awt.Font("Caviar Dreams", 1, 18)); // NOI18N
        edit.setForeground(new java.awt.Color(255, 255, 255));
        edit.setText("Edit Profile");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        newb.setFont(new java.awt.Font("Caviar Dreams", 1, 18)); // NOI18N
        newb.setForeground(new java.awt.Color(255, 255, 255));
        newb.setText("New Booking");
        newb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newbActionPerformed(evt);
            }
        });

        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1541829391162 (1).png"))); // NOI18N
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(mybook, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(edit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(waiting, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                        .addComponent(newb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(mybook, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addComponent(waiting, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(newb, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newbActionPerformed
        // TODO add your handling code here:
        location a = new location();
        this.setVisible(false);
        a.setVisible(true);
    }//GEN-LAST:event_newbActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        edit_profile a =new edit_profile();
        this.setVisible(false);
        a.setVisible(true);
    }//GEN-LAST:event_editActionPerformed

    private void mybookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mybookActionPerformed
        // TODO add your handling code here:
        int ct=0;
        String uid=null;
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/oop?zeroDateTimeBehavior=convertToNull","root","12345");
            Statement s=con.createStatement();
            Statement s1=con.createStatement();
            ResultSet rs=null,rs1=null;
            rs=s.executeQuery("select * from logindata where active=1;");
            while(rs.next())
            {
                uid=rs.getString(1);
            }
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");  
            Date date = new Date();  
            String currentDate=formatter.format(date);
            int temp=0;
            rs=s.executeQuery("select * from "+uid+";");
            while(rs.next())
            {
                rs1=s1.executeQuery("select datediff('"+rs.getString(3)+"','"+currentDate+"');");
                while(rs1.next())
                {
                    temp=rs1.getInt(1);
                }
                if(temp>=0 && rs.getInt(8)==1)
                    ct++;
            }
            if(ct==0)
            {
                JOptionPane.showMessageDialog(this, "No bookings available.");
            }
            else {
                viewbooking a=new viewbooking();
                a.setVisible(true);
                this.setVisible(false);
            }
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_mybookActionPerformed

    private void waitingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waitingActionPerformed
        // TODO add your handling code here:
        int ct=0;
        String uid=null;
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/oop?zeroDateTimeBehavior=convertToNull","root","12345");
            Statement s=con.createStatement();
            Statement s1=con.createStatement();
            ResultSet rs=null,rs1=null;
            rs=s.executeQuery("select * from logindata where active=1;");
            while(rs.next())
            {
                uid=rs.getString(1);
            }
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");  
            Date date = new Date();  
            String currentDate=formatter.format(date);
            int temp=0;
            rs=s.executeQuery("select * from "+uid+";");
            while(rs.next())
            {
                rs1=s1.executeQuery("select datediff('"+rs.getString(3)+"','"+currentDate+"');");
                while(rs1.next())
                {
                    temp=rs1.getInt(1);
                }
                if(temp>=0 && rs.getInt(8)!=1) 
                    ct++;
            }
            if(ct==0)
            {
                JOptionPane.showMessageDialog(this, "No bookings available.");
            }
            else {
                viewwaiting a=new viewwaiting();
                a.setVisible(true);
                this.setVisible(false);
            }
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_waitingActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        login x=new login();
        this.setVisible(false);
        x.setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menupage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menupage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menupage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menupage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new menupage().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton edit;
    private javax.swing.JButton logout;
    private javax.swing.JButton mybook;
    private javax.swing.JButton newb;
    private javax.swing.JButton waiting;
    // End of variables declaration//GEN-END:variables
}
